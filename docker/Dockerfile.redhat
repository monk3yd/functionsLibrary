# Define global ARGS
ARG FUNCTION_DIR="/home/app/"

# Stage 1 - bundle base image + runtime
# Grab a fresh copy of the image
FROM public.ecr.aws/lambda/python:3.9 as build-image

# Stage 2 - build function and dependencies
RUN yum update -y
RUN yum groupinstall -y "Development Tools"
# RUN yum install -y python3
# RUN yum install -y python3-pip
RUN yum install -y poppler-utils

# Include global arg in this stage of the build
ARG FUNCTION_DIR

# Create function directory
RUN mkdir -p ${FUNCTION_DIR}

# Copy handler function
COPY app.py ${FUNCTION_DIR}
# Copy handler function packages/modules dependencies
COPY utils.py ${FUNCTION_DIR}

# Upgrade pip
RUN python3 -m pip install --upgrade pip

# Image dependencies
RUN pip3 install Pillow --upgrade --target ${FUNCTION_DIR}
RUN pip3 install pytesseract==0.3.9 --upgrade --target ${FUNCTION_DIR}
RUN pip3 install pyzbar==0.1.9 --upgrade --target ${FUNCTION_DIR}
RUN pip3 install opencv-python==4.6.0.66 --upgrade --target ${FUNCTION_DIR}

# PDF
RUN pip3 install pdfplumber==0.7.3 --upgrade --target ${FUNCTION_DIR}
RUN pip3 install pdf2image==1.16.0 --upgrade --target ${FUNCTION_DIR}
RUN pip3 install poppler-utils --upgrade --target ${FUNCTION_DIR}

# Playwright dependencies
RUN pip3 install playwright==1.22.0 --upgrade --target ${FUNCTION_DIR}
RUN python3 -m playwright install --target ${FUNCTION_DIR}

# Stage 3 - final runtime image
FROM public.ecr.aws/lambda/python:3.9

# Include global arg in this stage of the build
ARG FUNCTION_DIR

# Set working directory to function root directory
WORKDIR ${FUNCTION_DIR}

# Copy in the built dependencies
COPY --from=build-image ${FUNCTION_DIR} ${FUNCTION_DIR}

CMD [ "app.lambda_handler" ]
